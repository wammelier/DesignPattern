유스케이스 다이어그램

시스템과 사용자의 상호작용을 다이어그램으로 표현한 것으로 사용자의 관점에서 시스템의 서비스 혹은 기능 및 그와 관련한 외부 요소를 보여주는 것이다.
사용자가 시스템 내부에 있는 기능 중에 어떤 기능을 사용 할 수 있는지 나타내며 유스케이스 다이어그램을 사용함으로써 고객과 개발자가 요구사항에 대한 의견을 조율 할 수 있다.

한마디로 사용자랑 시스템사이에 관계를 나타내는 것으로 볼 수 있다.

유스케이스 다이어그램은 프로젝트에 대한 요구사항을 정의하고 세부기능을 분석하며 개발 범위를 정할 때 작성한다.
유스케이스 다이어그램의 구성요소는 시스템(System), 액터(Actor), 유스케이스(Usecase), 관계(Relation)로 구성되어 있다.

작성 순서
유스케이스 작성 순서로는 1. 액터 식별 2. 유스케이스 식별 3. 관계 정의 이다.

1. 액터 식별
액터는 시스템에 관련이 있는 사용자의 역할과 외부 시스템으로 식별 할 수 있다.

액터를 식별하기 위한 질문?
 - 누가 정보를 제공하고, 사용하고, 삭제하는가?
 - 누가 또는 어떤 조직에서 개발될 시스템을 사용할 것인가?
 - 누가 요구사항에 대해 관심을 가지고, 시스템이 만들어낸 결과에 관심이 있는가?
 - 누가 시스템이 잘 운영될 수 있도록 유지보수 및 관리를 하는가?
 - 개발될 시스템과 상호작용하는 하드웨어나 소프트웨어 시스템은 무엇인가?

2. 유스케이스 식별
액터가 요구하는 서비스, 정보를 유스케이스로 식별 할 수 있고 액터가 시스템과 상호작용하는 행위를 유스케이스로도 나타낼 수 있다.

유스케이스를 식별하기 위한 질문?
 - 액터가 원하는 시스템 제공 기능은 무엇인가?
 - 액터는 시스템에 어떤 정보를 생성, 수정, 조회, 삭제하고 싶어 하는가?
 - 모든 기능 요구사항들을 만족할 수 있도록 유스케이스가 모두 식별 되었는가?

3. 관계 정의
액터간, 유스케이스간의 일반화, 연관관계를 정의하고 유스케이스간의 포함, 확장관계를 정의한다.

관계를 식별하기 위한 질문?
 - 연관 관계: 액터와 유스케이스 간에 상호 작용이 존재하는가?
 - 포함 관계: 유스케이스를 실행하기 위하여 반드시 실행되어야 하는 유스케이스가 존재하는가?
 - 확장 관계: 유스케이스를 실행함으로써 선택적으로 실행되는 유스케이스가 존재하는가?
 - 일반화 관계: 액터 또는 유스케이스가 구체화 된 다른 액터 또는 유스케이스를 가지고 있는가?